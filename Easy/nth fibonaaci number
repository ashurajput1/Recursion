import UIKit

// Function to calculate the nth Fibonacci number using recursion

func fibonacci(n: Int) -> Int {
    
    // Base Case: If n is less than 2 (i.e., 0 or 1), return n directly.
    // For n = 0, returns 0 (first Fibonacci number).
    // For n = 1, returns 1 (second Fibonacci number).

    if n < 2 {
        return n
    }
    
    // Recursive Case: Calculate the nth Fibonacci number as the sum of the
    // (n-1)th and (n-2)th Fibonacci numbers.
    // This recursively calls the fibonacci function for n-1 and n-2 and adds their results.

    return fibonacci(n: n - 1) + fibonacci(n: n - 2)
}

// Define the value of n for which we want to find the nth Fibonacci number

let n = 6

// Print the nth Fibonacci number. For n = 6, the Fibonacci sequence up to the 6th number is
// 0, 1, 1, 2, 3, 5, 8. Therefore, fibonacci(6) should print 8.

print(fibonacci(n: n))  // Output will be 8
